#!/usr/bin/env bash

# Restores the latest test DB dump to the test site, and updates it if necessary
echo "Checking that we're good to go..."

if [ -z "$PROJECT_ROOT" ]
then
    echo "Error: PROJECT_ROOT not defined. Run as 'fin restore-test-db'." >&2
    echo "Or, if you're not using Docksal, just define PROJECT_ROOT=<dir containing composer.json>" >&2
    exit 1
fi

if [ -z "$NEURONET_SSH_USER" ]
then
	read -rp "Enter your PMACS server username: "
	export NEURONET_SSH_USER=$REPLY
fi


"$PROJECT_ROOT"/.docksal/commands/check-vpn || exit $?

drush=$PROJECT_ROOT/vendor/bin/drush


# use some command-fu to find and restore the newest test dump
# have to make it all one bash "list" b/c drush ssh is dumb
# Can't use single quotes, that would be too many layers
server_code=$(cat << 'EOF'
    cd .. &&
    latest_dump=$(echo $HOME/backups/test_*.sql | tr " " "\n" | tail -n 1) &&
    if [ -z $latest_dump ];
    then
        touch foo;
        echo No test database dump to restore >&2;
        exit 1;
    fi &&

    echo Restoring $latest_dump to test DB &&
    drush=vendor/bin/drush &&
    $drush sset system.maintenance_mode TRUE &&
    echo Turned on maintenance mode &&
    $drush sql-drop -y &&
    echo Dropped current test database &&
    $drush sql-query --file="$latest_dump" &&
    echo Restored "$latest_dump" &&
    $drush updb -y &&
    echo Updated databse &&
    $drush cim -y &&
    echo Imported config files &&
    $drush sset system.maintenance_mode FALSE &&
    echo Turned off maintenance mode &&
    echo &&
    echo Test DB restored.

    || echo Failed to restore test DB. >&2
EOF
)

$drush @self.test --tty ssh "sudo -u neuronet bash +O nullglob -ic '$server_code'"
